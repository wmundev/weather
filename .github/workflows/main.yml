name: .NET

on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: deploy
      timeout-minutes: 30
      run: |
        eval $(ssh-agent -s)
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan "$SSH_URL" >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts
        ssh admin@"$SSH_URL" 'rm -rf /home/admin/weather'
        cd ..
        tar czf - weather | ssh admin@$SSH_URL "cd /home/admin && tar xvzf -"
        cd weather
        ssh admin@"$SSH_URL" 'cd /home/admin/weather/weather-backend && sudo docker-compose build'
        ssh admin@"$SSH_URL" 'cd /home/admin/weather/weather-backend && sudo docker-compose down'
        ssh admin@"$SSH_URL" 'cd /home/admin/weather/weather-backend && sudo docker-compose pull'
        ssh admin@"$SSH_URL" 'cd /home/admin/weather/weather-backend && sudo docker-compose up -d'
      env:
        SSH_URL: ${{ secrets.SSH_URL }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      
#    - name: Restore dependencies
#      run: |
#        cd weather-backend
#        dotnet restore
#    - name: Build
#      run: dotnet build --no-restore
#    - name: Test
#      run: |
#        cd .. 
#        cd weather-test
#        dotnet test --no-build --verbosity normal
