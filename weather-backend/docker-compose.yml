version: "3.5"

volumes:
  nginx-conf:
  nginx-vhost:
  nginx-html:
  nginx-certs:
  nginx-htpasswd:

networks:
  proxy:
  ghost:

services:
  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:1.19
    restart: always
    networks:
      - proxy
    ports:
      - "80:80"
      - "443:443"
    security_opt:
      - label:type:docker_t
    volumes:
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro,z
      - nginx-conf:/etc/nginx/conf.d
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - nginx-certs:/etc/nginx/certs:ro
      - nginx-htpasswd:/etc/nginx/htpasswd:ro
  #    healthcheck:
  #      test: ["CMD", "curl", "-f", "https://${VIRTUAL_HOST}/api/health"] # this endpoint should be implemented in your app
  #      interval: 1m30s
  #      timeout: 10s
  #      retries: 3
  #      start_period: 40s

  docker-gen:
    container_name: docker-gen
    image: joellinn/docker-gen
    restart: always
    networks:
      - proxy
    security_opt:
      - label:type:docker_t
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro,z
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro,z
      - nginx-conf:/etc/nginx/conf.d
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - nginx-certs:/etc/nginx/certs:ro
      - nginx-htpasswd:/etc/nginx/htpasswd:ro
    command: >-
      -notify-sighup nginx-proxy -watch -wait 5s:30s
      /etc/docker-gen/templates/nginx.tmpl
      /etc/nginx/conf.d/default.conf

  nginx-ssl:
    container_name: nginx-ssl
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    networks:
      - proxy
    security_opt:
      - label:type:docker_t
    volumes:
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - nginx-certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro,z
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: docker-gen

  web:
    build: .
    container_name: weather
    restart: unless-stopped
    networks:
      - proxy
      - ghost
    env_file: .env
    expose:
      - 3000
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - /etc/letsencrypt:/https:ro
