version: "3.5"

volumes:
  pgdata:

networks:
  proxy:
  ghost:

services:
  web:
    build: .
    container_name: weather
    restart: unless-stopped
    networks:
      - proxy
      - ghost
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:443;http://+:80
#      - ASPNETCORE_HTTPS_PORT=5000 #doesn't work atm
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/live/dotnet.wilsonmun.me/fullchain.pem
      - ASPNETCORE_Kestrel__Certificates__Default__KeyPath=/https/live/dotnet.wilsonmun.me/privkey.pem
    volumes:
      - /etc/letsencrypt:/https:ro
    depends_on:
      - db
    
  db:
    image: postgres:12
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_DB_FILE: /run/secrets/POSTGRES_DB
    secrets:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    security_opt:
      - label:type:docker_t
    volumes:
      - pgdata:/var/lib/postgresql/data
      - type: bind
        source: ./database/create
        target: /docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - ghost

secrets:
  POSTGRES_DB:
    file: POSTGRES_DB.txt
  POSTGRES_USER:
    file: POSTGRES_USER.txt
  POSTGRES_PASSWORD:
    file: POSTGRES_PASSWORD.txt
